[{"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/index.js":"1","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/App.js":"2","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Home.js":"3","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Navbar.js":"4","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Create.js":"5","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/BlogDetails.js":"6","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/NotFound.js":"7","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/BlogList.js":"8","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/useFetch.js":"9"},{"size":432,"mtime":1625581814262,"results":"10","hashOfConfig":"11"},{"size":662,"mtime":1625685610529,"results":"12","hashOfConfig":"11"},{"size":530,"mtime":1642905906915,"results":"13","hashOfConfig":"11"},{"size":1332,"mtime":1642725213111,"results":"14","hashOfConfig":"11"},{"size":1856,"mtime":1642905576506,"results":"15","hashOfConfig":"11"},{"size":1024,"mtime":1642904544162,"results":"16","hashOfConfig":"11"},{"size":267,"mtime":1625564674452,"results":"17","hashOfConfig":"11"},{"size":629,"mtime":1628473047478,"results":"18","hashOfConfig":"11"},{"size":1121,"mtime":1625570291355,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2qnovj",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/index.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/App.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Home.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Navbar.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/Create.js",["39"],"import {useState} from \"react\";\nimport {useLocation} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n    const [title,setTitle] =useState('');\n    const [body, setBody] = useState('');\n    const [author,setAuthor] = useState('');\n    const CreatedAt =  new Date().toLocaleString();\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n\n\n   const handleSubmit =(e)  =>{\n       e.preventDefault();\n       const blog = {title,body,author, CreatedAt };  \n     \n       setIsPending(true);\n\n\n   fetch('https://my-json-server.typicode.com/AlhassanMousa/jsonDbForBlog/blogs', {\n   method:'POST',\n   headers: {\"Content-Type\" : \"application/json\"},\n   body : JSON.stringify(blog)\n\n   }).then(() => {\n       console.log('new blog Added');\n       setIsPending(false);\n       //history.go(-1);\n       history.push('/');\n    })\n\n   }\n\n    return ( \n    <div className=\"create\">\n        <h2>Add a new Blog</h2>\n        <form onSubmit={handleSubmit}>\n            <label>Blog title:</label>\n              <input type=\"text\" required  value={title} onChange={(e) =>setTitle(e.target.value)} />\n              <label>Blog body:</label>\n              <textarea  required  value={body} onChange={(e) =>setBody(e.target.value)} ></textarea>\n              <label>Blog author:</label>\n\n              <select   value={author} onChange={(e) =>setAuthor(e.target.value)}  >\n              <option value=\"Hassan\">Hassan</option>\n              <option value=\"Hassan2\">Hassan2</option>\n              </select>\n              {!isPending && <button>Add blog</button> }\n              {isPending && <button>Adding Blog...</button> }\n              <br />\n            <label  value={CreatedAt}>{CreatedAt} </label> \n            \n        </form>\n        \n    </div>\n        \n\n     );\n}\n \nexport default Create;","/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/BlogDetails.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/NotFound.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/BlogList.js",[],"/home/hassan/React/React-Projects/ooooooooooo-React-ninja-Blog/src/useFetch.js",[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":9,"nodeType":"42","messageId":"43","endLine":2,"endColumn":20},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar"]