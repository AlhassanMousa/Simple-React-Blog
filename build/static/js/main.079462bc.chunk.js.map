{"version":3,"sources":["BlogList.js","useFetch.js","Home.js","Navbar.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["BlogList","blogs","title","CreatedAt","className","map","blog","style","textDecoration","to","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Navbar","as","href","aria-label","icon","borderRadius","size","colorScheme","variant","Create","setTitle","body","setBody","setAuthor","Date","toLocaleString","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079462bc.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React from \"react\";\n\n\nconst  BlogList = ({ blogs, CreatedAt,title}) => {\n\n\n\n   return ( \n       <div className='blog-list'>\n         <h2>{title}</h2>\n          {blogs.map((blog) => (\n              <div className=\"blog-review\"  key={blog.id} >\n                 <Link  style={{ textDecoration: 'none' }} to={`/blogs/${blog.id}`}>\n              <h1 className=\"titles\">{blog.title}</h1>\n              <p>  {blog.CreatedAt} التاريخ |   {blog.author} الكاتب</p>  \n              </Link>\n              </div>\n          ))} \n       </div>\n\n      );\n}\n \nexport default BlogList;","import { useState, useEffect } from \"react\";\n\n\nconst useFetch = (url) =>{\n const [data, setData] = useState(null);\n const [isPending, setIsPending] = useState(true);\n const [error, setError] = useState(null);\n\n\n    useEffect(() => {\n        const abortCont = new AbortController();\n        setTimeout(() => {\n            fetch(url,{signal : abortCont.signal}) \n            .then(res =>{\n            if(!res.ok) {\n                throw Error('could not fetch data for that resources');\n          \n           } \n           return res.json();\n           \n        }) \n           .then(data => {\n               setData(data);\n               setIsPending(false);\n               setError(null);\n           })\n           .catch(err => {\n               if(err.name === 'AbortError'){\n                   console.log('fetch aborted')\n               }else{\n               setIsPending(false);\n               setError(err.message);\n               } \n            });\n        },500);\n            \n        return () => abortCont.abort();\n    }, [url]);\n    \n    \n\n\n\n    \n\nreturn {data, isPending, error};\n    };\n\nexport default useFetch;","import BlogList from './BlogList';\nimport useFetch from './useFetch';\n\n\n\nconst Home = () => {\n    //const {data: blogs, isPending, error} = useFetch('http://localhost:8000/blogs');\n    const {data: blogs, isPending, error} = useFetch('https://my-json-server.typicode.com/AlhassanMousa/jsonDbForBlog/blogs/');\nreturn (\n\n    <div className=\"home\" >\n        {error && <div>{error}</div>}\n        {isPending && <div>Loading...</div>}\n      {blogs && <BlogList  blogs={blogs} title=\"All blogs!\"/>}\n    </div>\n);\n};\nexport default Home;","\nimport React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport { IconButton } from \"@chakra-ui/react\"\n\nimport {  ImBlog } from \"react-icons/im\";\nimport {AiTwotoneHome} from \"react-icons/ai\";\nimport {MdPostAdd} from \"react-icons/md\";\nconst Navbar = () => {\n    return (  \n        <nav className=\"navbar\">\n            <h1>\n            <IconButton\n            as=\"a\"\n            href=\"/\"\n            aria-label=\"Github\"\n            icon={<ImBlog />}\n            borderRadius=\"100%\"\n            size='lg'\n            colorScheme='teal'\n            variant='outline'\n          />\n          \n            </h1>\n            <div className=\"links\">\n          \n            <Link to=\"/create\" ><IconButton\n            as=\"a\"\n            href=\"/\"\n            aria-label=\"Github\"\n            icon={< MdPostAdd/>}\n            borderRadius=\"100%\"\n            size='lg'\n            colorScheme='teal'\n            variant='outline'\n          /></Link>\n            \n            \n            <Link to=\"/\"> <IconButton\n            as=\"a\"\n            href=\"/\"\n            aria-label=\"Github\"\n            icon={<AiTwotoneHome />}\n            borderRadius=\"100%\"\n            size='lg'\n            colorScheme='teal'\n            variant='outline'\n          />\n            </Link>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import {useState} from \"react\";\nimport {useLocation} from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n    const [title,setTitle] =useState('');\n    const [body, setBody] = useState('');\n    const [author,setAuthor] = useState('');\n    const CreatedAt =  new Date().toLocaleString();\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n\n\n   const handleSubmit =(e)  =>{\n       e.preventDefault();\n       const blog = {title,body,author, CreatedAt };  \n     \n       setIsPending(true);\n\n\n   fetch('https://my-json-server.typicode.com/AlhassanMousa/jsonDbForBlog/blogs', {\n   method:'POST',\n   headers: {\"Content-Type\" : \"application/json\"},\n   body : JSON.stringify(blog)\n\n   }).then(() => {\n       console.log('new blog Added');\n       setIsPending(false);\n       //history.go(-1);\n       history.push('/');\n    })\n\n   }\n\n    return ( \n    <div className=\"create\">\n        <h2>Add a new Blog</h2>\n        <form onSubmit={handleSubmit}>\n            <label>Blog title:</label>\n              <input type=\"text\" required  value={title} onChange={(e) =>setTitle(e.target.value)} />\n              <label>Blog body:</label>\n              <textarea  required  value={body} onChange={(e) =>setBody(e.target.value)} ></textarea>\n              <label>Blog author:</label>\n\n              <select   value={author} onChange={(e) =>setAuthor(e.target.value)}  >\n              <option value=\"Hassan\">Hassan</option>\n              <option value=\"Hassan2\">Hassan2</option>\n              </select>\n              {!isPending && <button>Add blog</button> }\n              {isPending && <button>Adding Blog...</button> }\n              <br />\n            <label  value={CreatedAt}>{CreatedAt} </label> \n            \n        </form>\n        \n    </div>\n        \n\n     );\n}\n \nexport default Create;","import {useHistory, useParams} from \"react-router-dom\";\nimport  useFetch from './useFetch';\nimport \"./index.css\"\n\nconst BlogDetails = () => {\n    const {id } = useParams();\n   const {data: blog, error, isPending} = useFetch('https://my-json-server.typicode.com/AlhassanMousa/jsonDbForBlog/blogs/'+id);\n  const history = useHistory();\n  const handleClick = () =>{\n       fetch('https://my-json-server.typicode.com/AlhassanMousa/jsonDbForBlog/blogs/'+ blog.id ,{\n           method:'DELETE'\n       }).then(() =>{\n         history.push('/');   \n       })\n   }\n\n\n\n    return ( \n\n <div className=\"blog-details\">\n     {isPending && <div>Loading...</div>}\n     {error && <div>{ error }</div>}\n     {blog && (\n         <article>\n          <h2>{blog.title}</h2>\n          <p>written by {blog.author}</p>\n          <div>{blog.body}</div> \n          <div>{blog.CreatedAt}</div>\n          <button className=\"buttonDelete\" onClick={handleClick}>delete</button>\n         </article> \n     )}\n </div>\n\n     );\n}\n \nexport default BlogDetails;","import {Link} from \"react-router-dom\"\n\nconst NotFound = () => {\n    return ( \n     <div className=\"not-found\">\n     <h2>Sorry</h2>\n     <p>That page cannot be found</p>\n     <Link to=\"/\">Back to the homepage...</Link>\n     </div>\n\n     );\n}\n \nexport default NotFound;","import './App.css';\nimport Home from './Home';\nimport Navbar  from './Navbar';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n    <Switch>\n      <Route exact path=\"/\"><Home /></Route>\n      <Route path=\"/create\"><Create /></Route>\n      <Route path=\"/blogs/:id\"><BlogDetails /></Route>\n      <Route  path=\"*\"><NotFound /></Route>\n    </Switch>\n       </div>\n    </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}